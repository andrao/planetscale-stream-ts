// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file psdbconnect.proto (package psdbconnect.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from '@bufbuild/protobuf';
import { SyncRequest, SyncResponse } from './psdbconnect_pb.js';

/**
 * @generated from service psdbconnect.v1alpha1.Connect
 */
export const Connect = {
    typeName: 'psdbconnect.v1alpha1.Connect',
    methods: {
        /**
         * Sync will continuously stream data from a PlanetScale database given a table, keyspace and shard.
         * Sync also allows you to incrementally sync data from a table given a TableCursor that is returned as part of the SyncResponse.
         * If the last known position is empty, Sync will download all the rows for a given table in a shard
         * and then wait to stream any changes to the table (inserts/updates/deletes)
         * If the last known position is not empty, Sync will pickup where the last Sync session left off and stream
         * any changes to the table since the last Sync session.
         *
         * @generated from rpc psdbconnect.v1alpha1.Connect.Sync
         */
        sync: {
            name: 'Sync',
            I: SyncRequest,
            O: SyncResponse,
            kind: MethodKind.ServerStreaming,
        },
    },
} as const;
